function [logL,model,bootY]=wpvLouisianaTransmissionLogLikelihood(b,Y,N,NAb,resampleRep)
if nargin<5
    resampleRep=0;
end

% fit naive OlderSibling
experiment{1} = primarySecondaryTertiaryDoseModel('perDoseEfficacy',1 ...
                        ,'tertiaryContactAcquire',0 ...
                        ,'secondaryLog2NAb',log2(NAb(1)) ...
                        ,'doseResponseBeta',10^b(1) ...
                        ,'runNetwork',false,'serotype',4,'confidenceIntervalSamplerSeed',resampleRep);

% fit immune OlderSibling
experiment{2} = primarySecondaryTertiaryDoseModel('perDoseEfficacy',1 ...
                        ,'tertiaryContactAcquire',0 ...
                        ,'secondaryLog2NAb',log2(NAb(2)) ...
                        ,'doseResponseBeta',10^b(1) ...
                        ,'runNetwork',false,'serotype',4,'confidenceIntervalSamplerSeed',resampleRep);

if length(Y)>2                    
    % fit naive adult
    experiment{3} = primarySecondaryTertiaryDoseModel('perDoseEfficacy',1 ...
                        ,'secondaryContactAcquire',10^(-5.2943+b(2)) ...
                        ,'tertiaryContactAcquire',0 ...
                        ,'secondaryLog2NAb',log2(NAb(3)) ...
                        ,'doseResponseBeta',10^b(1) ...
                        ,'runNetwork',false,'serotype',4,'confidenceIntervalSamplerSeed',resampleRep);

    % fit immune adult
    experiment{4} = primarySecondaryTertiaryDoseModel('perDoseEfficacy',1 ...
                        ,'secondaryContactAcquire',10^(-5.2943+b(2)) ...
                        ,'tertiaryContactAcquire',0 ...
                        ,'secondaryLog2NAb',log2(NAb(4)) ...
                        ,'doseResponseBeta',10^b(1) ...
                        ,'runNetwork',false,'serotype',4,'confidenceIntervalSamplerSeed',resampleRep);
end
   
p=nan(length(Y),1);
for k=1:length(Y);
    p(k)=sum(experiment{k}.secondary.incidence(1:30)); % sera collected within month
end

p=p+10*eps;

model=p;

logL=nansum(Y.*log(p) + (N-Y).*log(1-p));

if nargout==3
    bootY=binornd(N,p);
end

end